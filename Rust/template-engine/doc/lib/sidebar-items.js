initSidebarItems({"enum":[["ContentType","ContentType is the main data structure to classify the template string read  from the template file. It is represented as enum and contains the list of  possible token types read from the template file.  As each statement (template string) is read from the template file,  it is evaluated to check if it is one of the types defined in this enum."],["TagType","TagType is a supporting data structure that is used to indicate  whether a template string corresponds to a for-tag (repetitive loop)  or if-tag (display control)"]],"fn":[["check_matching_pair","Checking if the two matching tags are contained within the input string"],["check_symbol_string","Checks if a symbol string, for example, ‘{%’, is contained within another string."],["generate_html_template_var","constructs the output html statement consisting of head, text content, and tail.  To construct the text content, the template variables are replaced with  the values from the context data"],["get_content_type","Entry point for parser. Accepts an input statement  and tokenizes it into one of an if tag, a for tag, or a template variable."],["get_expression_data","This parses an expression with a template variable, parses it into head, variable, and tail components, and returns the results"],["get_index_for_symbol","takes two parameters and returns the index  where the second value is found within the first value.  This makes it easy to split the template string into three parts  – head, variable, and tail"]],"struct":[["ExpressionData","A struct to store the result of the tokenization of the template string"]]});